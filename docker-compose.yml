version: '3.8'

services:
  # Service de base de donn√©es
  db:
    image: mysql:8.0
    container_name: community_ai_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-community_ai}
      MYSQL_USER: ${MYSQL_USER:-community_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-community_password}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - community_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Service backend
  backend:
    build:
      context: ./community_ai_backend
      dockerfile: Dockerfile
    container_name: community_ai_backend
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URI=mysql+pymysql://${MYSQL_USER:-community_user}:${MYSQL_PASSWORD:-community_password}@db/${MYSQL_DATABASE:-community_ai}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./community_ai_backend:/app
      - backend_uploads:/app/uploads
    networks:
      - community_network
    ports:
      - "5000:5000"

  # Service frontend
  frontend:
    build:
      context: ./community_ai_frontend
      dockerfile: Dockerfile
    container_name: community_ai_frontend
    restart: always
    depends_on:
      - backend
    volumes:
      - ./community_ai_frontend:/app
      - /app/node_modules
    networks:
      - community_network
    ports:
      - "80:80"

  # Service de proxy inverse (Nginx)
  nginx:
    image: nginx:alpine
    container_name: community_ai_nginx
    restart: always
    depends_on:
      - backend
      - frontend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - backend_uploads:/var/www/uploads
    networks:
      - community_network
    ports:
      - "443:443"

networks:
  community_network:
    driver: bridge

volumes:
  db_data:
  backend_uploads:

